
   

   

    <main>
        <section class="hero container">
            <div class="hero-content">
                <h1>LLM Benchmarking for Healthcare</h1>
                <p>
                    Our mission is to advance rigorous evaluation and performance assessment of large language models (LLMs) to ensure they deliver accurate, reliable, and clinically relevant outputs that improve patient care and support clinicians.
                </p>
                <a href="#contact" class="cta-button">Contact us</a>
            </div>
            <div class="hero-animation-container">
                <canvas id="hero-animation"></canvas>
            </div>
        </section>

        <section class="trust-bar">
            <div class="container">
                <h2>Benchmarking models from</h2>
                <div class="logos-container">
                    <img src="https://upload.wikimedia.org/wikipedia/commons/2/2f/Google_2015_logo.svg" alt="Google">
                    <img src="https://upload.wikimedia.org/wikipedia/commons/4/44/Microsoft_logo.svg" alt="Microsoft">
                    <img src="https://upload.wikimedia.org/wikipedia/commons/7/78/Anthropic_logo.svg" alt="Anthropic">
                    <img src="https://upload.wikimedia.org/wikipedia/commons/4/4d/OpenAI_Logo.svg" alt="OpenAI">
                    <!-- Add other logos like Meta, Mistral if desired -->
                     <img src="https://upload.wikimedia.org/wikipedia/commons/e/e6/Mistral_AI_logo_%282025%E2%80%93%29.svg" alt="Mistral AI">
                     <img src="https://upload.wikimedia.org/wikipedia/commons/7/7b/Meta_Platforms_Inc._logo.svg" alt="Meta">

                </div>
            </div>
        </section>

        <section class="content-section container">
            <div class="info-card">
                <h2>Our Mission</h2>
                <p>
                    We are committed to fostering innovation in AI technology while prioritizing patient safety, data privacy, and equitable access to these transformative solutions.
                </p>
                <p>
                    Through research, education, collaboration, and advocacy, we aim to ensure that medical AI evolves as a trusted partner in healthcare, empowering professionals and enhancing outcomes for all.
                </p>
                <p>
                   We embrace open source principles to accelerate knowledge sharing, enable collaborative development, and promote transparency, and we hope to create a foundation for responsible AI that will help advance healthcare and improve patient outcomes. 
                </p>

            </div>
        </section>

        <section class="team-section">
            <div class="container">
                 <h2>Our Team</h2>
                <p style="text-align: center; color: var(--secondary); max-width: 700px; margin: -20px auto 40px auto;">
                    Led by experienced professionals in AI and healthcare, committed to transforming patient care through ethical innovation.
                </p>
                <div class="team-grid">
                    <div class="team-member">
                        <img src="<%= asset_path('elie.webp') %>" alt="Elie Toubiana">
                        <h3>Elie Toubiana</h3>
                        <p class="title">CEO, ScribeMD.ai</p>
                        <p>An AI engineer and entrepreneur working on helping clinical practices through innovative tools. His developments currently serve over 10,000 physicians worldwide.</p>
                    </div>
                    <div class="team-member">
                        <img src="<%= asset_path('max.png') %>" alt="Maxime Cohen">
                        <h3>Maxime Cohen</h3>
                        <p class="title">Scale AI Chair Professor, McGill University & Chief AI Strategy, CIUSSS West-Central Montreal</p>
                        <p>A distinguished leader bridging the gap between theoretical advancement and practical implementation of AI in healthcare.</p>
                    </div>
                    <div class="team-member">
                         <img src="<%= asset_path('eddy.jpeg') %>" alt="Eddy Hage-Youssef">
                        <h3>Eddy Hage-Youssef</h3>
                        <p class="title">Research Assistant</p>
                        <p>A 4th year Computer Science & Statistics student at McGill University, researching AI agents across various applications under Professor Cohen.</p>
                    </div>
                </div>
            </div>
        </section>


    </main>

    

    <script>
        // --- Simple Particle Animation ---
        const canvas = document.getElementById('hero-animation');
        const ctx = canvas.getContext('2d');
        let particles = [];
        const particleCount = 50; // Adjust particle density

        function resizeCanvas() {
            const container = document.querySelector('.hero-animation-container');
            canvas.width = container.offsetWidth;
            canvas.height = container.offsetHeight;
        }

        class Particle {
            constructor() {
                this.x = Math.random() * canvas.width;
                this.y = Math.random() * canvas.height;
                this.size = Math.random() * 2 + 1; // Particle size
                this.speedX = Math.random() * 1 - 0.5; // Slower speed
                this.speedY = Math.random() * 1 - 0.5;
                this.color = 'rgba(56, 161, 105, 0.5)'; // Use primary color with alpha
            }

            update() {
                this.x += this.speedX;
                this.y += this.speedY;

                // Boundary check (bounce)
                if (this.x < 0 || this.x > canvas.width) this.speedX *= -1;
                if (this.y < 0 || this.y > canvas.height) this.speedY *= -1;
            }

            draw() {
                ctx.fillStyle = this.color;
                ctx.beginPath();
                ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
                ctx.fill();
            }
        }

        function initParticles() {
            particles = [];
            for (let i = 0; i < particleCount; i++) {
                particles.push(new Particle());
            }
        }

        function connectParticles() {
            const maxDistance = 100; // Max distance to draw a line
            ctx.strokeStyle = 'rgba(113, 128, 150, 0.15)'; // Secondary color with low alpha for lines
            ctx.lineWidth = 0.5;

            for (let a = 0; a < particles.length; a++) {
                for (let b = a + 1; b < particles.length; b++) { // Start from a+1 to avoid duplicates and self-connection
                    const dx = particles[a].x - particles[b].x;
                    const dy = particles[a].y - particles[b].y;
                    const distance = Math.sqrt(dx * dx + dy * dy);

                    if (distance < maxDistance) {
                        ctx.beginPath();
                        ctx.moveTo(particles[a].x, particles[a].y);
                        ctx.lineTo(particles[b].x, particles[b].y);
                        ctx.stroke();
                    }
                }
            }
        }


        function animate() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            particles.forEach(p => {
                p.update();
                p.draw();
            });
            connectParticles(); // Draw lines between nearby particles
            requestAnimationFrame(animate);
        }

        // --- Initialization ---
        window.addEventListener('resize', () => {
            resizeCanvas();
            initParticles(); // Reinitialize on resize if needed, or just adjust positions
        });

        // Initial setup
        resizeCanvas();
        initParticles();
        animate();

        // --- Banner Dismissal (already handled inline) ---

    </script>

